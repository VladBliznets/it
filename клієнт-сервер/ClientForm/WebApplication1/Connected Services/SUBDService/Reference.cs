//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.SUBDService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SUBDService.ISUBDService")]
    public interface ISUBDService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/OpenNew", ReplyAction="http://tempuri.org/ISUBDService/OpenNewResponse")]
        void OpenNew();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/OpenNew", ReplyAction="http://tempuri.org/ISUBDService/OpenNewResponse")]
        System.Threading.Tasks.Task OpenNewAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/OpenBase", ReplyAction="http://tempuri.org/ISUBDService/OpenBaseResponse")]
        int OpenBase(string Path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/OpenBase", ReplyAction="http://tempuri.org/ISUBDService/OpenBaseResponse")]
        System.Threading.Tasks.Task<int> OpenBaseAsync(string Path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/BaseOpened", ReplyAction="http://tempuri.org/ISUBDService/BaseOpenedResponse")]
        bool BaseOpened();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/BaseOpened", ReplyAction="http://tempuri.org/ISUBDService/BaseOpenedResponse")]
        System.Threading.Tasks.Task<bool> BaseOpenedAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/TableOpened", ReplyAction="http://tempuri.org/ISUBDService/TableOpenedResponse")]
        bool TableOpened();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/TableOpened", ReplyAction="http://tempuri.org/ISUBDService/TableOpenedResponse")]
        System.Threading.Tasks.Task<bool> TableOpenedAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/RowsInTable", ReplyAction="http://tempuri.org/ISUBDService/RowsInTableResponse")]
        int RowsInTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/RowsInTable", ReplyAction="http://tempuri.org/ISUBDService/RowsInTableResponse")]
        System.Threading.Tasks.Task<int> RowsInTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/ColumnsInTable", ReplyAction="http://tempuri.org/ISUBDService/ColumnsInTableResponse")]
        int ColumnsInTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/ColumnsInTable", ReplyAction="http://tempuri.org/ISUBDService/ColumnsInTableResponse")]
        System.Threading.Tasks.Task<int> ColumnsInTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/GetNameInCurrentTable", ReplyAction="http://tempuri.org/ISUBDService/GetNameInCurrentTableResponse")]
        string GetNameInCurrentTable(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/GetNameInCurrentTable", ReplyAction="http://tempuri.org/ISUBDService/GetNameInCurrentTableResponse")]
        System.Threading.Tasks.Task<string> GetNameInCurrentTableAsync(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/GetTypeInCurrentTable", ReplyAction="http://tempuri.org/ISUBDService/GetTypeInCurrentTableResponse")]
        string GetTypeInCurrentTable(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/GetTypeInCurrentTable", ReplyAction="http://tempuri.org/ISUBDService/GetTypeInCurrentTableResponse")]
        System.Threading.Tasks.Task<string> GetTypeInCurrentTableAsync(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/GetValueInTable", ReplyAction="http://tempuri.org/ISUBDService/GetValueInTableResponse")]
        string GetValueInTable(int i, int j);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/GetValueInTable", ReplyAction="http://tempuri.org/ISUBDService/GetValueInTableResponse")]
        System.Threading.Tasks.Task<string> GetValueInTableAsync(int i, int j);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/GetNumberOfTables", ReplyAction="http://tempuri.org/ISUBDService/GetNumberOfTablesResponse")]
        int GetNumberOfTables();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/GetNumberOfTables", ReplyAction="http://tempuri.org/ISUBDService/GetNumberOfTablesResponse")]
        System.Threading.Tasks.Task<int> GetNumberOfTablesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/GetNumberOfFieldsInTable", ReplyAction="http://tempuri.org/ISUBDService/GetNumberOfFieldsInTableResponse")]
        int GetNumberOfFieldsInTable(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/GetNumberOfFieldsInTable", ReplyAction="http://tempuri.org/ISUBDService/GetNumberOfFieldsInTableResponse")]
        System.Threading.Tasks.Task<int> GetNumberOfFieldsInTableAsync(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/GetTableName", ReplyAction="http://tempuri.org/ISUBDService/GetTableNameResponse")]
        string GetTableName(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/GetTableName", ReplyAction="http://tempuri.org/ISUBDService/GetTableNameResponse")]
        System.Threading.Tasks.Task<string> GetTableNameAsync(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/GetNameInTable", ReplyAction="http://tempuri.org/ISUBDService/GetNameInTableResponse")]
        string GetNameInTable(int i, int j);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/GetNameInTable", ReplyAction="http://tempuri.org/ISUBDService/GetNameInTableResponse")]
        System.Threading.Tasks.Task<string> GetNameInTableAsync(int i, int j);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/GetTypeInTable", ReplyAction="http://tempuri.org/ISUBDService/GetTypeInTableResponse")]
        string GetTypeInTable(int i, int j);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/GetTypeInTable", ReplyAction="http://tempuri.org/ISUBDService/GetTypeInTableResponse")]
        System.Threading.Tasks.Task<string> GetTypeInTableAsync(int i, int j);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/ChangeCurrentTable", ReplyAction="http://tempuri.org/ISUBDService/ChangeCurrentTableResponse")]
        int ChangeCurrentTable(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/ChangeCurrentTable", ReplyAction="http://tempuri.org/ISUBDService/ChangeCurrentTableResponse")]
        System.Threading.Tasks.Task<int> ChangeCurrentTableAsync(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/BaseHasPath", ReplyAction="http://tempuri.org/ISUBDService/BaseHasPathResponse")]
        bool BaseHasPath();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/BaseHasPath", ReplyAction="http://tempuri.org/ISUBDService/BaseHasPathResponse")]
        System.Threading.Tasks.Task<bool> BaseHasPathAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/Changed", ReplyAction="http://tempuri.org/ISUBDService/ChangedResponse")]
        bool Changed();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/Changed", ReplyAction="http://tempuri.org/ISUBDService/ChangedResponse")]
        System.Threading.Tasks.Task<bool> ChangedAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/Save", ReplyAction="http://tempuri.org/ISUBDService/SaveResponse")]
        int Save();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/Save", ReplyAction="http://tempuri.org/ISUBDService/SaveResponse")]
        System.Threading.Tasks.Task<int> SaveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/getAllFiles", ReplyAction="http://tempuri.org/ISUBDService/getAllFilesResponse")]
        string getAllFiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/getAllFiles", ReplyAction="http://tempuri.org/ISUBDService/getAllFilesResponse")]
        System.Threading.Tasks.Task<string> getAllFilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/SaveAs", ReplyAction="http://tempuri.org/ISUBDService/SaveAsResponse")]
        int SaveAs(string Path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/SaveAs", ReplyAction="http://tempuri.org/ISUBDService/SaveAsResponse")]
        System.Threading.Tasks.Task<int> SaveAsAsync(string Path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/CreateTable", ReplyAction="http://tempuri.org/ISUBDService/CreateTableResponse")]
        int CreateTable(string Name, System.Tuple<string, string>[] NamesTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/CreateTable", ReplyAction="http://tempuri.org/ISUBDService/CreateTableResponse")]
        System.Threading.Tasks.Task<int> CreateTableAsync(string Name, System.Tuple<string, string>[] NamesTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/OpenTable", ReplyAction="http://tempuri.org/ISUBDService/OpenTableResponse")]
        int OpenTable(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/OpenTable", ReplyAction="http://tempuri.org/ISUBDService/OpenTableResponse")]
        System.Threading.Tasks.Task<int> OpenTableAsync(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/DeleteTable", ReplyAction="http://tempuri.org/ISUBDService/DeleteTableResponse")]
        int DeleteTable(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/DeleteTable", ReplyAction="http://tempuri.org/ISUBDService/DeleteTableResponse")]
        System.Threading.Tasks.Task<int> DeleteTableAsync(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/AddRow", ReplyAction="http://tempuri.org/ISUBDService/AddRowResponse")]
        void AddRow();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/AddRow", ReplyAction="http://tempuri.org/ISUBDService/AddRowResponse")]
        System.Threading.Tasks.Task AddRowAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/DeleteRows", ReplyAction="http://tempuri.org/ISUBDService/DeleteRowsResponse")]
        int DeleteRows(int PosRow, int num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/DeleteRows", ReplyAction="http://tempuri.org/ISUBDService/DeleteRowsResponse")]
        System.Threading.Tasks.Task<int> DeleteRowsAsync(int PosRow, int num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/ChangeRowValue", ReplyAction="http://tempuri.org/ISUBDService/ChangeRowValueResponse")]
        int ChangeRowValue(int RowPos, int ColumnPos, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/ChangeRowValue", ReplyAction="http://tempuri.org/ISUBDService/ChangeRowValueResponse")]
        System.Threading.Tasks.Task<int> ChangeRowValueAsync(int RowPos, int ColumnPos, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/GetPath", ReplyAction="http://tempuri.org/ISUBDService/GetPathResponse")]
        string GetPath();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/GetPath", ReplyAction="http://tempuri.org/ISUBDService/GetPathResponse")]
        System.Threading.Tasks.Task<string> GetPathAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/Union", ReplyAction="http://tempuri.org/ISUBDService/UnionResponse")]
        int Union(string name, string[] Inputargs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/Union", ReplyAction="http://tempuri.org/ISUBDService/UnionResponse")]
        System.Threading.Tasks.Task<int> UnionAsync(string name, string[] Inputargs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/Close", ReplyAction="http://tempuri.org/ISUBDService/CloseResponse")]
        void Close();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUBDService/Close", ReplyAction="http://tempuri.org/ISUBDService/CloseResponse")]
        System.Threading.Tasks.Task CloseAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISUBDServiceChannel : WebApplication1.SUBDService.ISUBDService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SUBDServiceClient : System.ServiceModel.ClientBase<WebApplication1.SUBDService.ISUBDService>, WebApplication1.SUBDService.ISUBDService {
        
        public SUBDServiceClient() {
        }
        
        public SUBDServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SUBDServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SUBDServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SUBDServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void OpenNew() {
            base.Channel.OpenNew();
        }
        
        public System.Threading.Tasks.Task OpenNewAsync() {
            return base.Channel.OpenNewAsync();
        }
        
        public int OpenBase(string Path) {
            return base.Channel.OpenBase(Path);
        }
        
        public System.Threading.Tasks.Task<int> OpenBaseAsync(string Path) {
            return base.Channel.OpenBaseAsync(Path);
        }
        
        public bool BaseOpened() {
            return base.Channel.BaseOpened();
        }
        
        public System.Threading.Tasks.Task<bool> BaseOpenedAsync() {
            return base.Channel.BaseOpenedAsync();
        }
        
        public bool TableOpened() {
            return base.Channel.TableOpened();
        }
        
        public System.Threading.Tasks.Task<bool> TableOpenedAsync() {
            return base.Channel.TableOpenedAsync();
        }
        
        public int RowsInTable() {
            return base.Channel.RowsInTable();
        }
        
        public System.Threading.Tasks.Task<int> RowsInTableAsync() {
            return base.Channel.RowsInTableAsync();
        }
        
        public int ColumnsInTable() {
            return base.Channel.ColumnsInTable();
        }
        
        public System.Threading.Tasks.Task<int> ColumnsInTableAsync() {
            return base.Channel.ColumnsInTableAsync();
        }
        
        public string GetNameInCurrentTable(int i) {
            return base.Channel.GetNameInCurrentTable(i);
        }
        
        public System.Threading.Tasks.Task<string> GetNameInCurrentTableAsync(int i) {
            return base.Channel.GetNameInCurrentTableAsync(i);
        }
        
        public string GetTypeInCurrentTable(int i) {
            return base.Channel.GetTypeInCurrentTable(i);
        }
        
        public System.Threading.Tasks.Task<string> GetTypeInCurrentTableAsync(int i) {
            return base.Channel.GetTypeInCurrentTableAsync(i);
        }
        
        public string GetValueInTable(int i, int j) {
            return base.Channel.GetValueInTable(i, j);
        }
        
        public System.Threading.Tasks.Task<string> GetValueInTableAsync(int i, int j) {
            return base.Channel.GetValueInTableAsync(i, j);
        }
        
        public int GetNumberOfTables() {
            return base.Channel.GetNumberOfTables();
        }
        
        public System.Threading.Tasks.Task<int> GetNumberOfTablesAsync() {
            return base.Channel.GetNumberOfTablesAsync();
        }
        
        public int GetNumberOfFieldsInTable(int i) {
            return base.Channel.GetNumberOfFieldsInTable(i);
        }
        
        public System.Threading.Tasks.Task<int> GetNumberOfFieldsInTableAsync(int i) {
            return base.Channel.GetNumberOfFieldsInTableAsync(i);
        }
        
        public string GetTableName(int i) {
            return base.Channel.GetTableName(i);
        }
        
        public System.Threading.Tasks.Task<string> GetTableNameAsync(int i) {
            return base.Channel.GetTableNameAsync(i);
        }
        
        public string GetNameInTable(int i, int j) {
            return base.Channel.GetNameInTable(i, j);
        }
        
        public System.Threading.Tasks.Task<string> GetNameInTableAsync(int i, int j) {
            return base.Channel.GetNameInTableAsync(i, j);
        }
        
        public string GetTypeInTable(int i, int j) {
            return base.Channel.GetTypeInTable(i, j);
        }
        
        public System.Threading.Tasks.Task<string> GetTypeInTableAsync(int i, int j) {
            return base.Channel.GetTypeInTableAsync(i, j);
        }
        
        public int ChangeCurrentTable(int i) {
            return base.Channel.ChangeCurrentTable(i);
        }
        
        public System.Threading.Tasks.Task<int> ChangeCurrentTableAsync(int i) {
            return base.Channel.ChangeCurrentTableAsync(i);
        }
        
        public bool BaseHasPath() {
            return base.Channel.BaseHasPath();
        }
        
        public System.Threading.Tasks.Task<bool> BaseHasPathAsync() {
            return base.Channel.BaseHasPathAsync();
        }
        
        public bool Changed() {
            return base.Channel.Changed();
        }
        
        public System.Threading.Tasks.Task<bool> ChangedAsync() {
            return base.Channel.ChangedAsync();
        }
        
        public int Save() {
            return base.Channel.Save();
        }
        
        public System.Threading.Tasks.Task<int> SaveAsync() {
            return base.Channel.SaveAsync();
        }
        
        public string getAllFiles() {
            return base.Channel.getAllFiles();
        }
        
        public System.Threading.Tasks.Task<string> getAllFilesAsync() {
            return base.Channel.getAllFilesAsync();
        }
        
        public int SaveAs(string Path) {
            return base.Channel.SaveAs(Path);
        }
        
        public System.Threading.Tasks.Task<int> SaveAsAsync(string Path) {
            return base.Channel.SaveAsAsync(Path);
        }
        
        public int CreateTable(string Name, System.Tuple<string, string>[] NamesTypes) {
            return base.Channel.CreateTable(Name, NamesTypes);
        }
        
        public System.Threading.Tasks.Task<int> CreateTableAsync(string Name, System.Tuple<string, string>[] NamesTypes) {
            return base.Channel.CreateTableAsync(Name, NamesTypes);
        }
        
        public int OpenTable(string Name) {
            return base.Channel.OpenTable(Name);
        }
        
        public System.Threading.Tasks.Task<int> OpenTableAsync(string Name) {
            return base.Channel.OpenTableAsync(Name);
        }
        
        public int DeleteTable(string Name) {
            return base.Channel.DeleteTable(Name);
        }
        
        public System.Threading.Tasks.Task<int> DeleteTableAsync(string Name) {
            return base.Channel.DeleteTableAsync(Name);
        }
        
        public void AddRow() {
            base.Channel.AddRow();
        }
        
        public System.Threading.Tasks.Task AddRowAsync() {
            return base.Channel.AddRowAsync();
        }
        
        public int DeleteRows(int PosRow, int num) {
            return base.Channel.DeleteRows(PosRow, num);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRowsAsync(int PosRow, int num) {
            return base.Channel.DeleteRowsAsync(PosRow, num);
        }
        
        public int ChangeRowValue(int RowPos, int ColumnPos, string value) {
            return base.Channel.ChangeRowValue(RowPos, ColumnPos, value);
        }
        
        public System.Threading.Tasks.Task<int> ChangeRowValueAsync(int RowPos, int ColumnPos, string value) {
            return base.Channel.ChangeRowValueAsync(RowPos, ColumnPos, value);
        }
        
        public string GetPath() {
            return base.Channel.GetPath();
        }
        
        public System.Threading.Tasks.Task<string> GetPathAsync() {
            return base.Channel.GetPathAsync();
        }
        
        public int Union(string name, string[] Inputargs) {
            return base.Channel.Union(name, Inputargs);
        }
        
        public System.Threading.Tasks.Task<int> UnionAsync(string name, string[] Inputargs) {
            return base.Channel.UnionAsync(name, Inputargs);
        }
        
        public void Close() {
            base.Channel.Close();
        }
        
        public System.Threading.Tasks.Task CloseAsync() {
            return base.Channel.CloseAsync();
        }
    }
}
